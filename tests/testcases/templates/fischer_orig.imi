(* EXAMPLE 2 *)
var
    id : int;
    k = 2 : constant;
    IDLE = -1 : int;
    N = 2 : int;

synt_var
  x : clock array (N);

template p(i : int)

loc A: invariant True
  when id = IDLE do { x[i] := 0 } goto req;

loc req: invariant x[i] <= k
  when x[i] <= k do { x[i] := 0; id := i } goto waiting;

loc waiting: invariant True
  when id = IDLE do { x[i] := 0 } goto req;
  when id = i & x[i] > k goto cs;

loc cs: invariant True
  when True do { id := IDLE } goto A;

end

(* Instantiation following UPPAAL's convention *)
instantiate p1 := p(0);
instantiate p2 := p(1);

init := {

    discrete =
        loc[p1] := A,
        loc[p2] := A,
        id := IDLE,
    ;

    continuous =
        x[0] = 0
      & x[1] = 0
      & True
    ;
}

end
