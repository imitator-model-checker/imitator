(************************************************************
 *                                IMITATOR MODEL
 *
 * Title            : Toy example to test IM with IH
 * Description      : Toy example to test IM with IH
 * Correctness      :
 * Scalable         : no
 * Generated        : no
 * Categories       : TBD
 * Source           : Own work
 * bibkey           : 
 * Author           : Étienne André
 * Modeling         : Étienne André
 * Input by         : Étienne André
 * License          : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created          : 2024/09/17
 * Last modified    : 2024/09/17
 * Model version    : 0.1
 *
 * IMITATOR version : 3.4-alpha
 ************************************************************)

var

(* Clocks *)
 	x,
		: clock;

(* Parameters *)
	p,
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
actions: ;

loc l1: invariant True
	(* We cheat with non-integer comparisons to ease the test of IH *)
	when 0.5 <= p goto l2;
	when 2.9 <= x & x <= 3.1 & x = p goto l3;

loc l2: invariant True

loc l3: invariant True

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init = {
	
    discrete =
		(*------------------------------------------------------------*)
		(* Initial location *)
		(*------------------------------------------------------------*)
		loc[pta] <- l1,

		(*------------------------------------------------------------*)
		(* Initial discrete variables assignments *)
		(*------------------------------------------------------------*)

    ;

    continuous =        
		(*------------------------------------------------------------*)
		(* Initial clock constraints *)
		(*------------------------------------------------------------*)
		& x = 0

		(*------------------------------------------------------------*)
		(* Parameter constraints *)
		(*------------------------------------------------------------*)
		& p >= 0
	;
}


(************************************************************)
(* The end *)
(************************************************************)
end
